name: PR commits
on: 
  pull_request:
    branches:
      - master
jobs:
  build:
    name: Trigger Benchmarks 1

    runs-on: ubuntu-latest

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v2
        with:
            ref: ${{ github.head_ref }}
            fetch-depth: 0
      - name: setup python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8 #install the python needed
      - name: Check missing commits in qa branch
        run: |
          python3 -m pip install requests
          python3 pull.py ${{ github.event.pull_request.commits_url }}
      # - name: Handle Incoming Pull-Request
      #   env:
      #     DISPATCH_REPO: "benchmarks"
      #     DISPATCH_OWNER: "npm"
      #     EVENT_NAME: ${{ github.event_name }}
      #     EVENT_ACTION: ${{ github.event.action }}
      #     REPO: ${{ github.event.repository.name }}
      #     PR_NUMBER: ${{ github.event.pull_request.number }}
      #     PR_OWNER: ${{ github.event.pull_request.head.repo.owner.login }}
      #     PR_COMMITS_URL: ${{ github.event.pull_request.commits_url }}
      #     PR_COMMIT_SHA: ${{ github.event.pull_request.head.sha }}
      #     AUTH_TOKEN: ${{ secrets.NPM_DEPLOY_USER_PAT }}
      #   run: |
      #     # Dispatch Handler
      #     dispatch_request () {
      #       echo "Dispatching request..."
      #       REF_SHA=$1
      #       echo "${REF_SHA}"
      #       echo "Git pull origin"
      #       co=$(git checkout qa)
      #       pull=$(git pull origin qa)
      #       echo "${pull}"
      #       echo "All branch"
      #       files=$(git branch --contains "${REF_SHA}")
      #       echo "${files}"
      #       echo "QA branch"
      #       checkqa=$(git branch --contains "${REF_SHA}" | grep qa)
      #       echo "${checkqa}"
      #     }

      #     echo "${PR_COMMITS_URL}"
      #     # Fetch the head commit sha, since it doesn't exist in the body of this event
      #     COMMIT_SHA=$(curl -s "${PR_COMMITS_URL}" | jq -r '.[0].sha')
      #     # Dispatch request for benchmarks
      #     dispatch_request "${COMMIT_SHA}"
          
